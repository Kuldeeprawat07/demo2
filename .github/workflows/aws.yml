name: Deploy to Amazon ECS

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ap-south-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: frontend
  AWS_ACCESS_KEY_ID: AKIAZKZV43ELYK5X6FVJ
  AWS_SECRET_ACCESS_KEY: pgM0HHkH8LHfp1TDvGKe+6seI3Ph/9ZPM7mKrWAh
  

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

      - run:
          name: Setup Env variables
          command: |
            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              echo 'export TAG=${CIRCLE_BRANCH}.0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            elif [ "${CIRCLE_BRANCH}" == "release" ]; then
              echo 'export TAG=${CIRCLE_BRANCH}.0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            elif [ "${CIRCLE_BRANCH}" == "stage" ]; then
              echo 'export TAG=${CIRCLE_BRANCH}.0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo 'export TAG=${CIRCLE_BRANCH}.0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            else
              echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            fi
            echo 'export IMAGE_NAME=tampa_rest' >> $BASH_ENV
      - run:
          name: Show Env variables and build docker image
          command: |
            echo $CIRCLE_BRANCH
            echo $TAG > build.tag
            echo $IMAGE_NAME
            docker build -t $IMAGE_NAME:$TAG .
      - run:
          name: Docker push image 
          command: |
            docker image ls            
            docker login $REGISTRY_HOST:$REGISTRY_PORT  --username $REGISTRY_USER --password $REGISTRY_PASS 
            docker tag $IMAGE_NAME:$TAG $REGISTRY_HOST:$REGISTRY_PORT/$REGISTRY_USER/$IMAGE_NAME:$TAG
            docker push $REGISTRY_HOST:$REGISTRY_PORT/$REGISTRY_USER/$IMAGE_NAME:$TAG
            docker tag $IMAGE_NAME:$TAG $REGISTRY_HOST:$REGISTRY_PORT/$REGISTRY_USER/$IMAGE_NAME:latest
            docker push $REGISTRY_HOST:$REGISTRY_PORT/$REGISTRY_USER/$IMAGE_NAME:latest
